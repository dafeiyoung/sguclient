#!/bin/sh /etc/rc.common
START=99

run_sguclient()
{
	local enable
	config_get_bool enable $1 enable

	if [ $enable ]; then
		local autoreconnect
		local username
		local password
		local isptype
		local ifname
		local wanip
		
		config_get_bool autoreconnect $1 autoreconnect
		config_get_bool noheartbeat $1 noheartbeat
		config_get username $1 username
		config_get password $1 password
		config_get isptype $1 isptype
		config_get ifname $1 ifname
		config_get wanip $1 wanip
		
		process=`pgrep sguclient`

		if [ -n "$process" ];then
			echo "sguclient is running, ignored..."
		else
			echo "sguclient not running, trying to start again..."
			
			local argconfig=""

			#----To start sguclient
			if [ $autoreconnect ]; then
				argconfig="--auto"
			fi

			if [ $noheartbeat ]; then
				argconfig="$argconfig --noheartbeat"
			fi
			
			# Many guard scripts are generated due to unknown reasons
			# add the following code to prevent it
			sed -i '/sguclient/d' /etc/crontabs/root
			sed -i '/^$/d' /etc/crontabs/root
			
			# if active then create guard scripts
			sguclient -u $username -p $password -i $isptype --device $ifname --ip $wanip $argconfig &
			echo "*/1 * * * * sguclient -u $username -p $password -i $isptype --device $ifname --ip $wanip $argconfig" >> /etc/crontabs/root
			
			echo "SGUClient has started."
			#----

		fi
	else
		# else delete guard scripts 
		sed -i '/sguclient/d' /etc/crontabs/root
		sed -i '/^$/d' /etc/crontabs/root
	fi
}

start()
{
	config_load sguclient
	config_foreach run_sguclient login
}

stop()
{
	killall sguclient
	sed -i '/sguclient/d' /etc/crontabs/root
	sed -i '/^$/d' /etc/crontabs/root
	echo "SGUClient has stoped."
}
